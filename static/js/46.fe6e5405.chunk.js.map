{"version":3,"file":"static/js/46.fe6e5405.chunk.js","mappings":"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","sources":["api.js","components/ErrorMessage.jsx","components/MovieList/MovieList.jsx","components/MovieInput/MovieInput.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '879ff30e220a7b6f7fd01273465d82d0';\n\nexport const fetchTrends = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${name}`\n  );\n  return data.results;\n};\n","export const ErrorMessage = () => {\n  return <p>Something went wrong, please reload this page</p>;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500';\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\n  return (\n    <ul>\n      {movies.map(({ id, title, name, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={poster_path ? `${imgBaseUrl}/${poster_path}` : defaultImg}\n                alt=\"poster\"\n              />\n              <p>{title ?? name}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const MovieInput = () => {\n  const [, setParams] = useSearchParams();\n\n  const submitForm = evt => {\n    evt.preventDefault();\n    const query = evt.target.elements.movie.value;\n    const nextParams = query ? { query } : {};\n    setParams(nextParams);\n  };\n\n  return (\n    <form onSubmit={submitForm}>\n      <input name=\"movie\" placeholder=\"Find your movie\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { fetchMovieByName } from 'api';\nimport { ErrorMessage } from 'components/ErrorMessage';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieInput } from 'components/MovieInput/MovieInput';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [params] = useSearchParams();\n  const query = params.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    async function getMovieByName() {\n      try {\n        setLoading(true);\n        setError(false);\n        const data = await fetchMovieByName(query);\n        setMovies(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieByName();\n  }, [query]);\n\n  return (\n    <div>\n      <MovieInput />\n      {loading && <Loader />}\n      {error && <ErrorMessage />}\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrends","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","id","_yield$axios$get2","_context2","_x","fetchMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x2","fetchMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieByName","_ref5","_callee5","name","_yield$axios$get5","_context5","_x4","ErrorMessage","_jsx","children","MovieList","movies","location","useLocation","map","title","poster_path","_jsxs","Link","to","state","from","src","alt","MovieInput","_useSearchParams","useSearchParams","setParams","_slicedToArray","onSubmit","evt","preventDefault","query","target","elements","movie","value","placeholder","type","MoviesPage","_useState","useState","_useState2","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","get","useEffect","_getMovieByName","t0","finish","getMovieByName","Loader"],"sourceRoot":""}